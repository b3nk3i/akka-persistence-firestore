
akka {
  stdout-loglevel = off // defaults to WARNING can be disabled with off. The stdout-loglevel is only in effect during system startup and shutdown
  log-dead-letters-during-shutdown = on
  loglevel = debug
  log-dead-letters = on
  log-config-on-start = off // Log the complete configuration at INFO level when the actor system is started

  loggers = ["akka.event.slf4j.Slf4jLogger"]
  logging-filter = "akka.event.slf4j.Slf4jLoggingFilter"

  actor {
    // Required until https://github.com/akka/akka/pull/28333 is available
    allow-java-serialization = on
    debug {
      receive = on // log all messages sent to an actor if that actors receive method is a LoggingReceive
      autoreceive = off // log all special messages like Kill, PoisoffPill etc sent to all actors
      lifecycle = off // log all actor lifecycle events of all actors
      fsm = off // enable logging of all events, transitioffs and timers of FSM Actors that extend LoggingFSM
      event-stream = off // enable logging of subscriptions (subscribe/unsubscribe) on the ActorSystem.eventStream
    }
  }
}

docker {
  host = "localhost"
}

firestore-journal {
  logicalDelete = ${akka-persistence-firestore.logicalDeletion.enable}
  event-adapters {
    test-write-event-adapter = "org.b3nk3i.akka.persistence.firestore.query.EventAdapterTest$TestWriteEventAdapter"
    test-read-event-adapter  = "org.b3nk3i.akka.persistence.firestore.query.EventAdapterTest$TestReadEventAdapter"
  }

  event-adapter-bindings {
    "org.b3nk3i.akka.persistence.firestore.query.EventAdapterTest$Event"            = test-write-event-adapter
    "org.b3nk3i.akka.persistence.firestore.query.EventAdapterTest$TaggedEvent"      = test-write-event-adapter
    "org.b3nk3i.akka.persistence.firestore.query.EventAdapterTest$TaggedAsyncEvent" = test-write-event-adapter
    "org.b3nk3i.akka.persistence.firestore.query.EventAdapterTest$EventAdapted"     = test-read-event-adapter
  }
}

firestore-journal {

  class = "org.b3nk3i.akka.persistence.firestore.journal.FirestoreJournalPlugin"

  # Dispatcher for the plugin actor.
  plugin-dispatcher = "akka.actor.default-dispatcher"

  project-id = "test-project-id"

  root = "test-journal"

  queue-size = "10"

  enqueue-timeout = 1s

  parallelism = 10
}

firestore-read-journal {

  project-id = "test-project-id"

  root = "test-journal"
}

firestore-read-journal-2 = ${firestore-read-journal}

akka.persistence {

  journal {
    plugin = "firestore-journal"
    auto-start-journals = ["firestore-journal"]
  }
  snapshot-store {
    plugin = "firestore-snapshot-store"
    auto-start-snapshot-stores = ["firestore-snapshot-store"]
  }
}

akka-persistence-firestore {

  logicalDeletion.enable = true

  client-provider-fqcn = "org.b3nk3i.akka.persistence.firestore.client.FireStoreEmulatorProvider"

}

firestore-snapshot-store {

  class = "org.b3nk3i.akka.persistence.firestore.snapshot.FirestoreSnapshotStore"

  project-id = "test-project-id"

  root = "test-snapshot"

  enqueue-timeout = 1s

  queue-size = "10"

  parallelism = 10
}